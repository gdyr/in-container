var searchIndex = JSON.parse('{\
"in_container":{"doc":"in-container","i":[[4,"ContainerRuntime","in_container","The detected container runtime.",null,null],[13,"Docker","","Docker container runtime",0,null],[13,"Jail","","BSD jail",0,null],[13,"Lxc","","Linux Containers",0,null],[13,"SystemdNspawn","","systemd-nspawn",0,null],[13,"Unknown","","The detected container runtime is unknown",0,null],[5,"in_container","","Returns `true` if called from inside a container, `false`…",null,[[]]],[5,"get_container_runtime","","Optionally returns the detected [`ContainerRuntime`] if…",null,[[],[["containerruntime",4],["option",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"equivalent","","",0,[[]]],[11,"from","","",0,[[]]],[11,"clone","","",0,[[],["containerruntime",4]]],[11,"eq","","",0,[[["containerruntime",4]]]],[11,"ne","","",0,[[["containerruntime",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"from_str","","",0,[[],["result",4]]]],"p":[[4,"ContainerRuntime"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);