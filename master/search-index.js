var searchIndex = JSON.parse('{\
"in_container":{"doc":"in-container","t":[4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,12],"n":["ContainerRuntime","Docker","Jail","Lxc","SystemdNspawn","Unknown","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","fmt","from","from","from_str","get_container_runtime","in_container","into","ne","to_owned","to_string","try_from","try_into","type_id","0"],"q":["in_container","","","","","","","","","","","","","","","","","","","","","","","","","","in_container::ContainerRuntime"],"d":["The detected container runtime.","Docker container runtime","BSD jail","Linux Containers","systemd-nspawn","The detected container runtime is unknown","","","","","","","","","","","","Optionally returns the detected <code>ContainerRuntime</code> if called …","Returns <code>true</code> if called from inside a container, <code>false</code> …","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,2],"f":[null,null,null,null,null,null,[[]],[[]],[[],["containerruntime",4]],[[]],[[["containerruntime",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["str",15]]],[[["str",15]],["result",4]],[[],["option",4,[["containerruntime",4]]]],[[],["bool",15]],[[]],[[["containerruntime",4]],["bool",15]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null],"p":[[4,"ContainerRuntime"],[13,"Unknown"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};